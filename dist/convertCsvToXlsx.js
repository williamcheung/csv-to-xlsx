"use strict";const fs=require("fs-extra");const csv=require("csv-parse/lib/sync");const xlsx=require("xlsx");function convertCsvToXlsx(source,destination){if(typeof source!=="string"||typeof destination!=="string"){throw new Error(`"source" and "destination" arguments must be of type string.`)}if(!fs.existsSync(source)){throw new Error(`source "${source}" doesn't exist.`)}if(fs.existsSync(destination)){throw new Error(`destination "${destination}" already exists.`)}const csvFile=fs.readFileSync(source,"UTF-8");const csvOptions={columns:true,delimiter:",",ltrim:true,rtrim:true};const records=csv(csvFile,csvOptions);const wb=xlsx.utils.book_new();const ws=xlsx.utils.json_to_sheet(records);xlsx.utils.book_append_sheet(wb,ws);xlsx.writeFile(wb,String(destination),{compression:true})}module.exports=convertCsvToXlsx;